% Copyright (C) Daphne Koller, Stanford University, 2012

function EUF = CalculateExpectedUtilityFactor( I )

  % Inputs: An influence diagram I with a single decision node and a single utility node.
  %         I.RandomFactors = list of factors for each random variable.  These are CPDs, with
  %              the child variable = D.var(1)
  %         I.DecisionFactors = factor for the decision node.
  %         I.UtilityFactors = list of factors representing conditional utilities.
  % Return value: A factor over the scope of the decision rule D from I that
  % gives the conditional utility given each assignment for D.var
  %
  % Note - We assume I has a single decision node and utility node.
  F = I.RandomFactors;
  D = I.DecisionFactors(1);
  U = I.UtilityFactors(1);
  EUF = [];
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  %
  % YOUR CODE HERE...
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
EUF.var=D.var;
EUF.card=D.card;
for i=1:prod(D.card)
    nowD=D;
    nowD.val=zeros(1,prod(D.card));
    nowD.val(i)=1;
    nowF=[F,nowD];
    if length(D.var)>1
        for j=2:length(D.var)
            E(j-1,1)=D.var(j);
            nowDass=
    nowF=ObserveEvidence

end  
